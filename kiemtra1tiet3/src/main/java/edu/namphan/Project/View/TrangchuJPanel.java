/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.namphan.Project.View;

import edu.namphan.Project.DAO.SinhvienDAO;
import edu.namphan.Project.Model.Sinhvien;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author ADMIN
 */
public class TrangchuJPanel extends javax.swing.JPanel {

    private List<Sinhvien> listStudent = new ArrayList();
    private SinhvienDAO svDao = new SinhvienDAO();
    public int countMale = 0;
    public int countFemale = 0;
    public int countHcm = 0;
    public int countHue = 0;
    public int countDanang = 0;

    /**
     * Creates new form TrangchuJPanel
     */
    public TrangchuJPanel() {
        initComponents();
        showChart();
        showChart2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRender = new javax.swing.JPanel();
        panelRender2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        panelRender.setBackground(new java.awt.Color(255, 255, 255));
        panelRender.setLayout(new java.awt.BorderLayout());

        panelRender2.setBackground(new java.awt.Color(255, 255, 255));
        panelRender2.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRender, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRender2, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelRender, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(panelRender2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public JPanel getPanelRender() {
        return panelRender;
    }

    public JPanel getPanelRender2() {
        return panelRender2;
    }

    public void showChart() {
        JFreeChart pieChart = createChart(createDataset());
        ChartPanel chartPanel = new ChartPanel(pieChart);
        panelRender.removeAll();
        panelRender.add(chartPanel, BorderLayout.CENTER);
        panelRender.validate();
    }

    public void showChart2() {
        ChartPanel chartPanel = new ChartPanel(createChart2());
        chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
        panelRender2.removeAll();
        panelRender2.add(chartPanel, BorderLayout.CENTER);
        panelRender2.validate();
    }

    private JFreeChart createChart(PieDataset dataset) {
        JFreeChart chart = ChartFactory.createPieChart(
                "THỐNG KÊ GIỚI TÍNH CỦA SINH VIÊN", dataset, true, true, true);
        return chart;
    }

    public JFreeChart createChart2() {
        JFreeChart barChart = ChartFactory.createBarChart(
                "BIỂU ĐỒ THỐNG KÊ SINH VIÊN THUỘC CÁC TỈNH",
                "Tỉnh", "Số người",
                createDataset2(), PlotOrientation.VERTICAL, false, false, false);
        return barChart;
    }

    private CategoryDataset createDataset2() {
        listStudent = svDao.getAllSinhvien();
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        listStudent.forEach(sv -> {
            if (sv.getAddress().equals("TP.HCM")) {
                countHcm++;
            }
            if (sv.getAddress().equals("Huế")) {
                countHue++;
            } else {
                countDanang++;
            }

        });
        dataset.addValue(countHcm, "Số người", "TP.HCM");
        dataset.addValue(countHue, "Số người", "Huế");
        dataset.addValue(countDanang, "Số người", "Đà Nẵng");

        return dataset;
    }

    private PieDataset createDataset() {
        listStudent = svDao.getAllSinhvien();
        DefaultPieDataset dataset = new DefaultPieDataset();
        listStudent.forEach(sv -> {
            if (sv.getGender().equals("Nam")) {
                countFemale++;
            } else {
                countMale++;
            }
        });
        dataset.setValue("Nam", countFemale);
        dataset.setValue("Nữ", countMale);
        return dataset;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelRender;
    private javax.swing.JPanel panelRender2;
    // End of variables declaration//GEN-END:variables
}
